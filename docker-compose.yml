version: "3"
services:
  graphql:
    environment:
      DYNAMODB_URL: ${DYNAMODB_URL}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE}
    build:
      context: ./graphql
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ~/.aws/:/root/.aws:ro
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
  user-service:
    environment:
      DYNAMODB_URL: ${DYNAMODB_URL}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE}
    build:
      context: ./microservices/user
      dockerfile: ./Dockerfile
    ports:
      - "8010:8000"
    volumes:
      - ~/.aws/:/root/.aws:ro
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
  organization-service:
    environment:
      DYNAMODB_URL: ${DYNAMODB_URL}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE}
    build:
      context: ./microservices/organization
      dockerfile: ./Dockerfile
    ports:
      - "8011:8000"
    volumes:
      - ~/.aws/:/root/.aws:ro
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
  policy-service:
    environment:
      DYNAMODB_URL: ${DYNAMODB_URL}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE}
    build:
      context: ./microservices/policy
      dockerfile: ./Dockerfile
    ports:
      - "8012:8000"
    volumes:
      - ~/.aws/:/root/.aws:ro
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"