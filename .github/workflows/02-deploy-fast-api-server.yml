name: demo.akello.io deploy
run-name: ${{ github.actor }} is deploying to demo ðŸš€
on:
  workflow_run:
    workflows: [ "Run API Server Tests"]
    branches: [ main ]
    types:
      - completed
jobs:
  Deploy-FastAPI-Demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker
        working-directory: packages/server
        run: docker build -t demo-akello-io .
      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1.3.6
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1
          local-image: demo-akello-io
          image: demo-akello-io:latest
      - name: default deploy
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: demo-akello-io
          image_uri: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/demo-akello-io:latest
  Deploy-Demo-App:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install packages
        working-directory: packages/apps/cocm-registry
        run: npm install

      - name: Build node
        working-directory: packages/apps/cocm-registry
        run: npm run build

      - uses: shallwefootball/s3-upload-action@master
        name: Upload S3
        id: S3
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'packages/apps/cocm-registry/build'

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          PATHS: '/*'
          AWS_REGION: 'us-east-1'
          DISTRIBUTION: ${{ secrets.AWS_CLOUD_FRONT_DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
