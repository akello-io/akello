version: '3'

services:
  # PostgreSQL database for Supertokens
  db-supertokens:
    image: postgres:latest
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: db-supertokens
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'supertokens_user', '-d', 'db-supertokens']
      interval: 5s
      timeout: 5s
      retries: 5

  # Supertokens server
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.2.2
    depends_on:
      db-supertokens:
        condition: service_healthy
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@db-supertokens:5432/db-supertokens"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/ttcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5  
      
  # Consul service
  consul:
    image: consul:1.14.6
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    environment:
      CONSUL_BIND_INTERFACE: eth0
    networks:
      - app_network
    command: "agent -dev -client=0.0.0.0"
    restart: unless-stopped    

  auth-api:
    build:
      context: ../../microservices/auth/server
      dockerfile: Dockerfile
    container_name: auth-api
    ports:
      - "3001:3001"
    restart: always
    networks:
      - app_network
    environment:
      CONSUL_HTTP_ADDR: "http://consul:8500"
      # Optionally register the service with Consul
      SERVICE_NAME: "auth-api"
      SERVICE_ID: "auth-api-1"
      SERVICE_PORT: 3001

  auth-app:
    build:
      context: ../../microservices/auth/app
      dockerfile: Dockerfile
    container_name: auth-app
    ports:
      - "3000:3000"
    networks:
      - app_network
    restart: always    
    environment:
      CONSUL_HTTP_ADDR: "http://consul:8500"
      # Optionally register the service with Consul
      SERVICE_NAME: "auth-app"
      SERVICE_ID: "auth-app-1"
      SERVICE_PORT: 3000

networks:
  app_network:
    driver: bridge
