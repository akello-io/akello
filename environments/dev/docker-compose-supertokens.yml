version: '3'

services:
  # PostgreSQL database for Supertokens
  db-supertokens:
    image: postgres:latest
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: db-supertokens
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'supertokens_user', '-d', 'db-supertokens']
      interval: 5s
      timeout: 5s
      retries: 5

  # Supertokens server
  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:9.2.2
    depends_on:
      db-supertokens:
        condition: service_healthy
    ports:
      - "3567:3567"
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@db-supertokens:5432/db-supertokens"
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/ttcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth App service
  auth-service-app:
    build:
      context: ../../microservices/auth_service/app
      dockerfile: Dockerfile
    container_name: auth-service-app    
    ports:
      - "3000:3000"
    networks:
      - app_network
    restart: always    
    environment:
      CONSUL_HTTP_ADDR: "http://consul:8500"
      SERVICE_NAME: "auth-service-app"
      SERVICE_ID: "auth-service-app-1"
      SERVICE_PORT: 3000
    volumes:
      - ./consul-register.sh:/usr/src/app/consul-register.sh
    command: >
      sh -c "./consul-register.sh auth-service-app auth-service-app-1 3000 http://consul:8500 && npm start"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  auth-service-api:
    build:
      context: ../../microservices/auth_service/server
      dockerfile: Dockerfile
    container_name: auth-service-api    
    ports:
      - "3001:3001"
    restart: always
    networks:
      - app_network
    environment:
      CONSUL_HTTP_ADDR: "http://consul:8500"
      SERVICE_NAME: "auth-service-api"
      SERVICE_ID: "auth-service-api-1"
      SERVICE_PORT: 3001
    volumes:
      - ./consul-register.sh:/usr/src/app/consul-register.sh
    command: >
      sh -c "./consul-register.sh auth-service-api auth-service-api-1 3001 http://consul:8500 && poetry run uvicorn app:app --host 0.0.0.0 --port 3001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:3001/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3      

networks:
  app_network:
    external: true


